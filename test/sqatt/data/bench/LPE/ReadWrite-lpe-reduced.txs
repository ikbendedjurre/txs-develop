-- LPE_proxyProcess --
CHANDEF ChanDefs
    ::= Chan1 :: Int
      ; Chan2 :: Int
ENDDEF
PROCDEF LPE[Chan1 :: Int; Chan2 :: Int](v5 :: Int; v6 :: Int; v7 :: Int; v8 :: Int; v9 :: Int; v10 :: Int; v11 :: Int; v12 :: Int; v13 :: Int; v14 :: Int; v15 :: Int; v16 :: Int; v17 :: Int; v18 :: Int; v19 :: Int; v20 :: Int) ::=
        ISTEP [[ IF (1==v5) THEN IF (1==v7) THEN IF (1==v8) THEN ((2==v9) /\ (2==v13) /\ (2==v17)) ELSE False FI ELSE False FI ELSE False FI ]] >-> LPE[Chan1, Chan2](1, v6, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0)
     ## Chan1 ? v3 :: Int [[ IF (0==v5) THEN (0==v3) ELSE False FI ]] >-> LPE[Chan1, Chan2](1, 0, 1, 1, 0, 1, 0, 0, 0, 2, 0, 0, 1, 4, 4, v3)
     ## Chan1 ? v3 :: Int [[ IF (0==v5) THEN (0==v3) ELSE False FI ]] >-> LPE[Chan1, Chan2](1, 0, 1, 1, 0, 1, 0, 0, 1, 2, 2, v3, 0, 4, 0, 0)
     ## Chan1 ? v3 :: Int [[ IF (0==v5) THEN (0==v3) ELSE False FI ]] >-> LPE[Chan1, Chan2](1, 0, 1, 1, 1, 1, 1, v3, 0, 2, 0, 0, 0, 4, 0, 0)
     ## Chan1 ? v3 :: Int [[ IF (1==v5) THEN ((0==v7) /\ (v3==v6)) ELSE False FI ]] >-> LPE[Chan1, Chan2](1, v6, 1, 1, 0, 1, 0, 0, 0, 2, 0, 0, 1, 4, 4, v3)
     ## Chan1 ? v3 :: Int [[ IF (1==v5) THEN ((0==v7) /\ (v3==v6)) ELSE False FI ]] >-> LPE[Chan1, Chan2](1, v6, 1, 1, 0, 1, 0, 0, 1, 2, 2, v3, 0, 4, 0, 0)
     ## Chan1 ? v3 :: Int [[ IF (1==v5) THEN ((0==v7) /\ (v3==v6)) ELSE False FI ]] >-> LPE[Chan1, Chan2](1, v6, 1, 1, 1, 1, 1, v3, 0, 2, 0, 0, 0, 4, 0, 0)
     ## Chan1 ? v3 :: Int [[ IF (1==v5) THEN ((2==v7) /\ (v3==v6)) ELSE False FI ]] >-> LPE[Chan1, Chan2](1, 0, 3, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0)
     ## Chan1 ? v3 :: Int [[ IF (1==v5) THEN ((v3==v6) /\ IF (1==v7) THEN IF (1==v8) THEN (0==v9) ELSE False FI ELSE False FI) ELSE False FI ]] >-> LPE[Chan1, Chan2](1, v6, 1, 1, 1, v10, v10, v3, v13, v14, v15, v16, v17, v18, v19, v20)
     ## Chan1 ? v3 :: Int [[ IF (1==v5) THEN ((v3==v6) /\ IF (1==v7) THEN IF (1==v8) THEN (0==v13) ELSE False FI ELSE False FI) ELSE False FI ]] >-> LPE[Chan1, Chan2](1, v6, 1, 1, v9, v10, v11, v12, 1, v14, v14, v3, v17, v18, v19, v20)
     ## Chan1 ? v3 :: Int [[ IF (1==v5) THEN ((v3==v6) /\ IF (1==v7) THEN IF (1==v8) THEN (0==v17) ELSE False FI ELSE False FI) ELSE False FI ]] >-> LPE[Chan1, Chan2](1, v6, 1, 1, v9, v10, v11, v12, v13, v14, v15, v16, 1, v18, v18, v3)
     ## Chan2 ? v4 :: Int [[ IF (1==v5) THEN IF (1==v7) THEN IF (1==v8) THEN IF (1==v9) THEN (v4==((v11)+(v12))) ELSE False FI ELSE False FI ELSE False FI ELSE False FI ]] >-> LPE[Chan1, Chan2](1, v4, 1, 1, 2, v10, v11, v12, v13, v14, v15, v16, v17, v18, v19, v20)
     ## Chan2 ? v4 :: Int [[ IF (1==v5) THEN IF (1==v7) THEN IF (1==v8) THEN IF (1==v13) THEN (v4==((v15)+(v16))) ELSE False FI ELSE False FI ELSE False FI ELSE False FI ]] >-> LPE[Chan1, Chan2](1, v4, 1, 1, v9, v10, v11, v12, 2, v14, v15, v16, v17, v18, v19, v20)
     ## Chan2 ? v4 :: Int [[ IF (1==v5) THEN IF (1==v7) THEN IF (1==v8) THEN IF (1==v17) THEN (v4==((v19)+(v20))) ELSE False FI ELSE False FI ELSE False FI ELSE False FI ]] >-> LPE[Chan1, Chan2](1, v4, 1, 1, v9, v10, v11, v12, v13, v14, v15, v16, 2, v18, v19, v20)
     ## Chan2 ? v4 :: Int [[ IF (1==v5) THEN IF (3==v7) THEN (0==v4) ELSE False FI ELSE False FI ]] >-> LPE[Chan1, Chan2](1, v4, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0)
ENDDEF
MODELDEF Model ::=
    CHAN IN
    CHAN OUT Chan1, Chan2
    BEHAVIOUR LPE[Chan1, Chan2](0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0)
ENDDEF
