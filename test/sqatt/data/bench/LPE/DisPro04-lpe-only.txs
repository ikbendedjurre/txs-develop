-- LPE_proxyProcess --
CHANDEF ChanDefs
    ::= Chan1
      ; Chan2
ENDDEF
PROCDEF LPE[Chan1; Chan2](v3 :: Int; v4 :: Int; v5 :: Int; v6 :: Int; v7 :: Int; v8 :: Int; v9 :: Int) ::=
        ISTEP [[ IF (1==v3) THEN IF (1==v4) THEN ((0==v6) /\ (1==v5)) ELSE False FI ELSE False FI ]] >-> LPE[Chan1, Chan2](1, 1, 0, 1, 0, 0, 1)
     ## ISTEP [[ IF (1==v3) THEN IF (1==v4) THEN ((0==v6) /\ (1==v5)) ELSE False FI ELSE False FI ]] >-> LPE[Chan1, Chan2](1, 1, 0, 1, 0, 1, 0)
     ## ISTEP [[ IF (1==v3) THEN IF (1==v4) THEN ((0==v6) /\ (1==v5)) ELSE False FI ELSE False FI ]] >-> LPE[Chan1, Chan2](1, 1, 0, 1, 1, 0, 0)
     ## ISTEP [[ IF (1==v3) THEN IF (1==v4) THEN ((1==v5) /\ IF (1==v6) THEN (0==v7) ELSE False FI) ELSE False FI ELSE False FI ]] >-> LPE[Chan1, Chan2](1, 1, 0, 1, 1, v8, v9)
     ## ISTEP [[ IF (1==v3) THEN IF (1==v4) THEN ((1==v5) /\ IF (1==v6) THEN (0==v8) ELSE False FI) ELSE False FI ELSE False FI ]] >-> LPE[Chan1, Chan2](1, 1, 0, 1, v7, 1, v9)
     ## ISTEP [[ IF (1==v3) THEN IF (1==v4) THEN ((1==v5) /\ IF (1==v6) THEN (0==v9) ELSE False FI) ELSE False FI ELSE False FI ]] >-> LPE[Chan1, Chan2](1, 1, 0, 1, v7, v8, 1)
     ## Chan1 [[ IF (1==v3) THEN IF (1==v4) THEN IF (1==v6) THEN (1==v7) ELSE False FI ELSE False FI ELSE False FI ]] >-> LPE[Chan1, Chan2](1, 1, v5, 1, 0, v8, v9)
     ## Chan1 [[ IF (1==v3) THEN IF (1==v4) THEN IF (1==v6) THEN (1==v8) ELSE False FI ELSE False FI ELSE False FI ]] >-> LPE[Chan1, Chan2](1, 1, v5, 1, v7, 0, v9)
     ## Chan1 [[ IF (1==v3) THEN IF (1==v4) THEN IF (1==v6) THEN (1==v9) ELSE False FI ELSE False FI ELSE False FI ]] >-> LPE[Chan1, Chan2](1, 1, v5, 1, v7, v8, 0)
     ## Chan1 [[ IF (1==v3) THEN IF (1==v4) THEN ((1==v5) /\ IF (1==v6) THEN ((0==v7) /\ (1==v8)) ELSE False FI) ELSE False FI ELSE False FI ]] >-> LPE[Chan1, Chan2](1, 1, 0, 1, 1, 0, v9)
     ## Chan1 [[ IF (1==v3) THEN IF (1==v4) THEN ((1==v5) /\ IF (1==v6) THEN ((0==v7) /\ (1==v9)) ELSE False FI) ELSE False FI ELSE False FI ]] >-> LPE[Chan1, Chan2](1, 1, 0, 1, 1, v8, 0)
     ## Chan1 [[ IF (1==v3) THEN IF (1==v4) THEN ((1==v5) /\ IF (1==v6) THEN ((0==v8) /\ (1==v7)) ELSE False FI) ELSE False FI ELSE False FI ]] >-> LPE[Chan1, Chan2](1, 1, 0, 1, 0, 1, v9)
     ## Chan1 [[ IF (1==v3) THEN IF (1==v4) THEN ((1==v5) /\ IF (1==v6) THEN ((0==v8) /\ (1==v9)) ELSE False FI) ELSE False FI ELSE False FI ]] >-> LPE[Chan1, Chan2](1, 1, 0, 1, v7, 1, 0)
     ## Chan1 [[ IF (1==v3) THEN IF (1==v4) THEN ((1==v5) /\ IF (1==v6) THEN ((0==v9) /\ (1==v7)) ELSE False FI) ELSE False FI ELSE False FI ]] >-> LPE[Chan1, Chan2](1, 1, 0, 1, 0, v8, 1)
     ## Chan1 [[ IF (1==v3) THEN IF (1==v4) THEN ((1==v5) /\ IF (1==v6) THEN ((0==v9) /\ (1==v8)) ELSE False FI) ELSE False FI ELSE False FI ]] >-> LPE[Chan1, Chan2](1, 1, 0, 1, v7, 0, 1)
     ## Chan1 | Chan2 [[ IF (1==v3) THEN IF (1==v4) THEN ((0==v5) /\ IF (1==v6) THEN (1==v7) ELSE False FI) ELSE False FI ELSE False FI ]] >-> LPE[Chan1, Chan2](1, 1, 1, 1, 0, v8, v9)
     ## Chan1 | Chan2 [[ IF (1==v3) THEN IF (1==v4) THEN ((0==v5) /\ IF (1==v6) THEN (1==v8) ELSE False FI) ELSE False FI ELSE False FI ]] >-> LPE[Chan1, Chan2](1, 1, 1, 1, v7, 0, v9)
     ## Chan1 | Chan2 [[ IF (1==v3) THEN IF (1==v4) THEN ((0==v5) /\ IF (1==v6) THEN (1==v9) ELSE False FI) ELSE False FI ELSE False FI ]] >-> LPE[Chan1, Chan2](1, 1, 1, 1, v7, v8, 0)
     ## Chan2 [[ (0==v3) ]] >-> LPE[Chan1, Chan2](1, 1, 1, 0, 0, 0, 0)
     ## Chan2 [[ IF (1==v3) THEN (0==v4) ELSE False FI ]] >-> LPE[Chan1, Chan2](1, 1, 1, 0, 0, 0, 0)
     ## Chan2 [[ IF (1==v3) THEN IF (1==v4) THEN (0==v5) ELSE False FI ELSE False FI ]] >-> LPE[Chan1, Chan2](1, 1, 1, v6, v7, v8, v9)
ENDDEF
MODELDEF Model ::=
    CHAN IN Chan2
    CHAN OUT Chan1
    BEHAVIOUR LPE[Chan1, Chan2](0, 0, 0, 0, 0, 0, 0)
ENDDEF
