-- LPE_proxyProcess --
CHANDEF ChanDefs
    ::= Chan1 :: Int # Int
      ; Chan2 :: Int # Int
      ; Chan3 :: Int
ENDDEF
PROCDEF LPE[Chan1 :: Int # Int; Chan2 :: Int # Int; Chan3 :: Int](v13 :: Int; v9 :: Int; v10 :: Int; v11 :: Int; v12 :: Int) ::=
        Chan1 ? v4 :: Int ? v5 :: Int [[ (0==v13) ]] >-> LPE[Chan1, Chan2, Chan3](1, v4, v5, v11, v12)
     ## Chan1 ? v4 :: Int ? v5 :: Int [[ (2==v13) ]] >-> LPE[Chan1, Chan2, Chan3](1, v4, v5, v11, v12)
     ## Chan2 ? v6 :: Int ? v7 :: Int [[ (0==v13) ]] >-> LPE[Chan1, Chan2, Chan3](3, v9, v10, v6, v7)
     ## Chan2 ? v6 :: Int ? v7 :: Int [[ (2==v13) ]] >-> LPE[Chan1, Chan2, Chan3](3, v9, v10, v6, v7)
     ## Chan3 ? v8 :: Int [[ IF (1==v13) THEN (v8==((v9)+(v10*(-1)))) ELSE False FI ]] >-> LPE[Chan1, Chan2, Chan3](2, v9, v10, v11, v12)
     ## Chan3 ? v8 :: Int [[ IF (3==v13) THEN (v8==((v11)+(v12))) ELSE False FI ]] >-> LPE[Chan1, Chan2, Chan3](2, v9, v10, v11, v12)
ENDDEF
MODELDEF Model ::=
    CHAN IN Chan1, Chan2
    CHAN OUT Chan3
    BEHAVIOUR LPE[Chan1, Chan2, Chan3](0, 0, 0, 0, 0)
ENDDEF
